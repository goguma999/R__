3. 산포도 그래프

> 산점도(산포도) 그래프는 두 개의 변수 간의 관계를 확인할 때 유용한 그래프입니다. 
둘의 관계가 선형관계를 보이는지 비선형관계를 보이는지 또는 상관관계는 양의 상관관계를 보이는지 음의 상관관계를 보이는지 또는 상관관계가 없는지 시각적으로 확인할 대 유용한 그래프입니다. 
그리고 이상치를 탐지하기 좋은 시각화 그래프입니다.
> 

### 📍문법1. 중고차 데이터의 x축을 주행거리로 하고, y축을 가격으로 해서 산포도 그래프를 plotly로 그리시오 !

```r
# 데이터 불러오기
library(plotly)
setwd("c:\\data")
usedcars<- read.csv("usedcars.csv",header=T)

# 산포도 그래프 생성
fig<- plot_ly( data= usedcars, 
								x= ~mileage,
								y= ~price, 
								type= 'scatter', 
								mode= 'markers',
								markers=list(color='blue'))
								
fig								
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/08691aea-b5b9-4275-80cd-5d0d824962f4/25fca8f5-6cdc-46c8-8d95-b6c6b7c82758/Untitled.png)

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/08691aea-b5b9-4275-80cd-5d0d824962f4/5362385c-9d2c-401f-9cf6-911397c67130/Untitled.png)

→ 시각화 결과 해석: 주행거리가 높을수록 중고차 가격이 하락하는 패턴을 보입니다.  

### 📍문법2. 추세선을 추가하시오 !

```r
# 데이터 불러오기
library(plotly)
setwd("c:\\data")
usedcars<- read.csv("usedcars.csv",header=T)

# 산포도 그래프 생성
fig<- plot_ly( data= usedcars, 
								**x**= ~**mileage**,
								**y**= ~**price**, 
								type= 'scatter', 
								mode= 'markers',
								markers=list(color='blue'))
								
# 추세선 추가 					
fig<- fig %>% add_trace(x= usedcars$**mileage**,
                        y= fitted( lm(**price**~**mileage**, data=usedcars)),
                        type='scatter',
                        mode='lines',
                        line=list(color='red'),
                        name='Trend Line' 
                        ) 
#그래프 출력
fig			

--해설
%>% - '파이프'라는 용어로 불리고 명령어1의 결과를 명령어2의 입력값으로 보내겠다는 뜻 
fig %>% add_trace - fig 객체에 새로운 트레이스를 추가하는 코드입니다. 
										기존 그래프에 새로운 그래프를 추가하겠다는 것입니다.

y= fitted( lm(price~mileage, data=usedcars) 
- y축 데이터로 price와 mileage간의 선형 회귀모델을 만들어서 예측값을 y축 데이터 값으로 사용.
-	**price**가 **종속변수**이고 **mileage**가 **독립변수**입니다. 
- fitted는 회귀 예측값을 y축 좌표로 사용하겠다는 것입니다.

mode='lines'은 점과 점을 선으로 연결하겠다는 것입니다.
	
```

![→ plotly가 추세선을 예쁘게 보여줌 ](https://prod-files-secure.s3.us-west-2.amazonaws.com/08691aea-b5b9-4275-80cd-5d0d824962f4/a2887750-89d5-4cb5-b51c-66bc41910784/Untitled.png)

→ plotly가 추세선을 예쁘게 보여줌 

둘의 변수가 관계가 있으니까 추세선을 넣는게 의미가 있는 것.  

문제102.  중고차 데이터로 x축을 year(연식)로 하고, y축을 price로 해서 산포도 그래프를 그리시오 ! 추세선도 추가하세요 ! 

```r
fig<- plot_ly( data= cars, 
               x= ~year,
               y= ~price, 
               type= 'scatter', 
               mode= 'markers',
               markers=list(color='blue'))
fig

fig<- fig %>% add_trace(x= usedcars$year,
                        y= fitted( lm(price~year, data=usedcars)),
                        type='scatter',
                        mode='lines',
                        line=list(color='red'),
                        name='Trend Line' 
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/08691aea-b5b9-4275-80cd-5d0d824962f4/1164424e-7b84-4e3d-a00a-de27ced686bc/Untitled.png)

### 📍문법3. 자동화 코드를 편하게 사용할 수 있도록 박스메세지가 화면에 출력되게 하시오

아래의 코드를 ann.R 스크립트로 작성하시오 ! 

```r
# 필요한 패키지 로드
library(svDialogs) 
-- 대화형 사용자 인터페이스 화면을 출력하게 해주는 패키지 

# 옵션 메시지 정의
**options_message <- "1: 막대 그래프 코드\n2: 원형 그래프 코드\n\n번호를 선택하세요:"**

# 사용자 입력 받기 (대화 상자 사용)
**dialog_result <- dlgInput(message = options_message, "")$res -- 메세지 박스 출력 
num <- as.integer(dialog_result) -- 입력받는 값을 숫자로 변환**

# switch 문을 사용해서 선택에 따라 다른 메세지 출력
result <- switch(as.character(num),
                 "1" = cat(readLines("bar_plot.R"), sep = "\n"),
                 "2" = cat(readLines("pie_plot.R"), sep = "\n"),
                 "유효하지 않은 선택입니다."
)

cat(result, "\n")
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/08691aea-b5b9-4275-80cd-5d0d824962f4/d0afe7f0-32d4-40a9-ae97-c258a8d90f1e/Untitled.png)

### 📍문법4. 자동화 스크립트를 수행했을 때 그래프와 관련된 코드와 그래프가 바로 출력 되게 ann.R코드를 수정하시오 !

```r
# 필요한 패키지 로드
library(svDialogs) 
-- 대화형 사용자 인터페이스 화면을 출력하게 해주는 패키지 

# 옵션 메시지 정의
**options_message <- "1: 막대 그래프 코드\n2: 원형 그래프 코드\n\n번호를 선택하세요:"**

# 사용자 입력 받기 (대화 상자 사용)
**dialog_result <- dlgInput(message = options_message, "")$res # 메세지 박스 출력 
num <- as.integer(dialog_result) # 입력받는 값을 숫자로 변환**

# switch 문을 사용해서 선택에 따라 다른 메세지 출력
result <- switch(as.character(num),
                 "1" = { cat(readLines("bar_plot.R"), sep = "\n")
				                 **source("bar_plot.R")** 
				                 },
                 "2" = { cat(readLines("pie_plot.R"), sep = "\n"
				                 **source("pie_plot.R")**
				                },
                 "유효하지 않은 선택입니다."
)

cat(result, "\n")
```

[점심문제]

[7월 2일 화요일] 점심시간 문제

타이타닉(tatanic2.csv) 의 성별별 인원수를 plotly 막대 그래프로 시각화 하시오.

---

```r
sex_cnt<- table(tat$sex)

install.packages("RColorBrewer")
library(RColorBrewer)
colors<-brewer.pal(5,'Set3')

#plotly를 사용한 막대 그래프 생성
fig<-plot_ly(x=names(sex_cnt),y=as.numeric(sex_cnt),type='bar',
             marker=list(color=colors))

#그래프 출력
fig
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/08691aea-b5b9-4275-80cd-5d0d824962f4/84a271c9-2b1f-4670-b72c-f0f532fb5e62/Untitled.png)

7월 3일 점심문제 
커미션을 받는 사원들의 월급의 분포를 산포도 그래프로 시각화 하세요

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/08691aea-b5b9-4275-80cd-5d0d824962f4/4ee052ad-9ab9-47c9-99ce-a5858757e660/Untitled.png)

```r
emp<-read.csv('emp.csv',header=T)
emp

comm<- emp[! is.na(emp$comm), c('ename','sal')]
comm

# 산포도 그래프 생성
fig<- plot_ly( data=comm , 
               x= ~ename,
               y= ~sal, 
               type= 'scatter', 
               mode= 'markers',
               marker=list(color='red'))
               
fig               
```